#+TITLE: QMK Vim
#+OPTIONS: ^:nil

* Table of Contents :TOC_3:noexport:
- [[#about][About]]
- [[#features][Features]]
  - [[#core-features][Core Features]]
    - [[#motions][Motions]]
    - [[#actions][Actions]]
    - [[#normal-mode][Normal Mode]]
    - [[#insert-mode][Insert Mode]]
    - [[#visual-mode][Visual Mode]]

* About
This is project aims to emulate as much of vim as possible in QMK userspace. The idea is to use clever combinations of shift, home, end, and control + arrow keys to emulate vim's modal editing and motions.

The other goal is to make it relatively plug and play in user keymaps, while still providing customization options.

* Features
** Core Features
The core features are in in the tables below and takes up roughly 5% of at Atmega32u4.
*** Motions
Motions are available in [[#normal-mode][normal]] and [[#visual-mode][visual mode]], and can be composed with [[#actions][actions]]. Note that in the table below the mods shown are for Linux/Windows, however if =VIM_FOR_MAC= is defined then these should change to =LOPT=.
| Vim Binding | Action       | Notes                                                                             |
|-------------+--------------+-----------------------------------------------------------------------------------|
| h           | LEFT         |                                                                                   |
| j           | DOWN         |                                                                                   |
| k           | UP           |                                                                                   |
| l           | RIGHT        |                                                                                   |
| w           | LCTL + RIGHT | This may act more like an =e= command depending on the text environment             |
| e           | LCTL + RIGHT | This may act more like an =w= command depending on the text environment             |
| b           | LCTL + LEFT  |                                                                                   |
| 0           | HOME         | In some text environments this goes to the true start, or the first piece of text |
| \$          | END          |                                                                                   |

*** Actions
Change, delete, and yank actions are all supported and can be combined with [[#motions][motions]] and text objects in normal mode as you would expect. For example =cw= will change until the next word (or end of word depending on your text environment). Note that by default the =d= action will copy the deleted text to the clipboard.

In visual mode each action can be accessed with =c=, =d=, and =y= respectively and they will act on the currently selected visual area.

Normal mode also supports these commands:
| Vim Binding | Action                | Notes                                              |
|-------------+-----------------------+----------------------------------------------------|
| cc          | Change line           | This doesn't copy the old line to clipboard        |
| C           | Change to end of line | This doesn't copy the changed content to clipboard |
| dd          | Delete line           | This copies the deleted line to clipboard          |
| D           | Delete to end of line | This copies the deleted text to clipboard          |
| yy          | Yank line             |                                                    |
| Y           | Yank to end of line   |                                                    |

*** Normal Mode
This below tables lists all of the commands not covered by the [[#motions][motions]] and [[#actions][actions]] sections . Note that in the table below the mods shown are for Linux/Windows,
however if =VIM_FOR_MAC= is defined then these should change to =LCMD=.
| Vim Binding | Action                        | Notes                                           |
|-------------+-------------------------------+-------------------------------------------------|
| i           | [[#insert-mode][insert_mode()]]                 |                                                 |
| I           | HOME, [[#insert-mode][insert_mode()]]           |                                                 |
| a           | RIGHT, [[#insert-mode][insert_mode()]]          |                                                 |
| A           | END, [[#insert-mode][insert_mode()]]            |                                                 |
| o           | END, ENTER, [[#insert-mode][insert_mode()]]     |                                                 |
| O           | UP, END, ENTER, [[#insert-mode][insert_mode()]] |                                                 |
| u           | LCTL + Z                      | This works /most/ places                          |
| CTRL + r    | LCTL + Y                      | This may or may not work everywhere             |
| x           | DELETE                        | This is currently only supported in normal mode |

*** Insert Mode
*** Visual Mode
